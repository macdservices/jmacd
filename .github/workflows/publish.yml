name: Publish
on:
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Version Name'
        required: true
jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '19'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.6
          arguments: build
        env:
          ORG_GRADLE_PROJECT_VERSION_NAME: ${{ github.event.inputs.versionName }}

      - name: Publish Library
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.6
          arguments: publish --no-daemon --no-parallel
        env:
          ORG_GRADLE_PROJECT_VERSION_NAME: ${{ github.event.inputs.versionName }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}

      - name: Close and Release Repository
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.6
          argumetns: closeAndReleaseRepository
        env:
          ORG_GRADLE_PROJECT_VERSION_NAME: ${{ github.event.inputs.versionName }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}

      - name: Create and push tag
        run: |
          git config --global user.email "paul.s.davenport.iii@macdservices.com"
          git config --global user.name "$GITHUB_ACTOR"
          git tag -a $TAG -m "Release v$TAG"
          git push origin $TAG
        env:
          TAG: ${{ github.event.inputs.versionName }}

      - name: Create Release on GitHub
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.versionName }}
          release_name: JMacD ${{ github.event.inputs.versionName }}
          draft: true
          prerelease: false

