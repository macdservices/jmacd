

buildscript {
  if ( new File("c:\\").exists() == false) {
	println "System Environmental Variables"
	System.getenv().each {
		println it;
	}
  }

	repositories {
		mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
	}

	dependencies {
		classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
	}
}

class Version {
	String buildNumberString = System.getenv("BUILD_NUMBER")

	String toString() {
		if (buildNumberString == null) {
			"1.0.0.6"

		} else {
			int buildNumber = Integer.parseInt(buildNumberString)

			"1.0.0.$buildNumber"
		}
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'project-report'
	apply plugin: 'java-library'

	sourceCompatibility = 19
	targetCompatibility = 19
	compileJava.options.encoding = 'UTF-8'

	group='com.macdservices'

	version = new Version().toString();

	repositories {
		flatDir {
		    dirs "$rootProject.projectDir/libs"
		}
    
		mavenCentral()
	}

	task allDeps(type: DependencyReportTask) {}

	task checkDependencies() {
		doLast {
			 configurations.runtimeClasspath.each { file ->
			if ( file.toString().contains('build') == false) {
				//println "TRACER checking: " + file.name
				assert file.exists()
				//TODO echo -e '\e[1A\e[K'
				}
			}
		}
	}

	configurations.all {
	 resolutionStrategy {
	   //force "groupId:artifactId:Version"
	   failOnVersionConflict()
	 }
	}

	task showJavaVersion {
		doLast {
			println "Java Version: " + JavaVersion.current()
		}
	}

    task hello {
        doLast { task ->
            println "I'm $task.project.name and rootProject $rootProject"
        }
    }

	apply plugin: 'maven-publish'
	apply plugin: 'distribution'

	publishing {
		def artifactoryDeployUser = System.getenv("PUBLISH_REPO_USER")
		def artifactoryDeployPass = System.getenv("PUBLISH_REPO_PASSWORD")

		repositories {
			maven {
				credentials {
					username artifactoryDeployUser
					password artifactoryDeployPass
				}

				url "https://redmindset.com:8081/artifactory/news"
			}
		}
	}
    
	dependencies {
    	compileOnly name: 'lombok-jdk19-20221010'
    	annotationProcessor name: 'lombok-jdk19-20221010'
    	testCompileOnly name: 'lombok-jdk19-20221010'
    	testAnnotationProcessor name: 'lombok-jdk19-20221010'
    
    	//compileOnly 'org.projectlombok:lombok:1.18.24' // *** No compile dependencies
		//testCompileOnly 'org.projectlombok:lombok:1.18.24' // *** No compile dependencies
		//annotationProcessor 'org.projectlombok:lombok:1.18.24'
    }  
    
	task sourcesJar(type: Jar, dependsOn: classes) {
	    classifier = 'sources'
	    from sourceSets.main.allSource
	}
	
	task javadocJar(type: Jar, dependsOn: javadoc) {
	    classifier = 'javadoc'
	    from javadoc.destinationDir
	}
	
	artifacts {
	    archives sourcesJar
	    archives javadocJar
	}    
}

